---
title: "Client Report - What's in a name?"
subtitle: "Course DS 250"
author: "Spencer Damiano"
format:
  html:
    self-contained: true
    page-layout: full
    title-block-banner: true
    toc: true
    toc-depth: 3
    toc-location: body
    number-sections: false
    html-math-method: katex
    code-fold: true
    code-summary: "Show the code"
    code-overflow: wrap
    code-copy: hover
    code-tools:
        source: false
        toggle: true
        caption: See code
    
---

```{python}
#| label: libraries
#| include: false
import pandas as pd
import altair as alt
import numpy as np

from IPython.display import Markdown
from IPython.display import display
from tabulate import tabulate
```


## Elevator pitch

I think that it's interesting to think that names are trends just like anything else. For example the most year for my name Spencer just happens to be the same year I was born. Did you also know for the given data set 10% of all Brineys were born in a single year. Or that Star Wars might have helped the name Luke stay relevant. I think that it's interesting to see how names change over time and what might have caused those changes. Turns out there is a lot in a name.

```{python}
#| label: project data
#| code-summary: Read and format project data
# Include and execute your code here
dat = pd.read_csv("https://github.com/byuidatascience/data4names/raw/master/data-raw/names_year/names_year.csv")
```

__Highlight the Questions and Tasks__

## QUESTION | TASK 1

How does your name at your birth year compare to its use historically?

It was the most popular for the name Spencer for sure. My parents told me it was from a stake president and close family friend. I think that the names popularity and personal experience can collide when picking a name. Just because the name was popular doesn't mean thats the sole reason that my parents picked my name. People are complicated so their names are likely to be so as well.

```{python}
#| label: Q1
#| code-summary: Read and format data
# Include and execute your code here

# get the data for my name
spencer_over_time = dat[["name", "year", "Total"]].query("name == 'Spencer'")

```

A simple line graph showing the name Spencer over time with a line at my birth year.

```{python}
#| label: Q1 chart
#| code-summary: plot example
#| fig-cap: "Spencer Over Time"
#| fig-align: center
# Include and execute your code here


chart = alt.Chart(
        spencer_over_time, 
        title=alt.Title("Spencers Over Time")
    )\
    .mark_line()\
    .encode(
        # x = "year:T",
        # y = "Total:Q",
        alt.X("year").axis(format="T").title("Year"),
        alt.Y("Total").axis(format="N").title("Total Spencers"),
        )\
    .properties(
        width=800,
        height=400
    )

# add a line at 1998, my birth year
line = alt.Chart(pd.DataFrame({"x": [1998], "Birth Year": ["Birth Year"]})).mark_rule().encode(
    alt.X("x").axis(format="T"),
    )

chart + line
    
```

In this table I wanted to see how popular the name Spencer is today. It looks like its slowly tappering off. I wonder if it will ever be as popular as it was in 1998.

```{python}
#| label: Q1 table
#| code-summary: table example
#| tbl-cap: "Spencers as a Table"
#| tbl-cap-location: top
# Include and execute your code here

spencer_table = spencer_over_time.head(1000)\
    .groupby('year')\
    .sum()\
    .tail(10)\
    .filter(["year", "Total"])

display(spencer_table)

```


## QUESTION | TASK 2

If you talked to someone named Brittany on the phone, what is your guess of his or her age? What ages would you not guess?

If you are talking on the phone, guess that they were born in late 80s early 90s. I would not guess that they were born before the year 1968 because this data set doesn't show a single Britney before that year. I would also not guess that they were born after 2000 because the name seems to have fallen off in popularity.

```{python}
#| label: Q2
#| code-summary: Read and format data
# Include and execute your code here

dat = pd.read_csv('https://raw.githubusercontent.com/byuidatascience/data4names/master/data-raw/names_year/names_year.csv')

brit_popular = dat[['name', 'year', 'Total']].query('name == "Brittany"')

```

Chart below show the percent of total Britneys by year. The red bar is the year with the highest percent of total. I think that the name Brittany is a good example of a trend. It was popular for a time and then fell off. I think that this is a good example of how names are trends just like anything else.

```{python}
#| label: Q2 chart
#| code-summary: plot example
#| fig-cap: "Britneys Popularity"
#| fig-align: center
# Include and execute your code here

# calculate the highest percent of total
highest_ttl = brit_popular["Total"].max() / brit_popular["Total"].sum()


chart = alt.Chart(
        brit_popular,
        title = alt.Title("Percent of Total Britneys by Year")
    )\
    .transform_joinaggregate(
        total_time="sum(Total)"
    )\
    .transform_calculate(
        # calculate the percent of total
        percent_of_total="datum.Total / datum.total_time" 
    )\
    .mark_bar()\
    .encode(
    alt.X("year").axis(format="T").title("Year"),
    y = alt.Y("percent_of_total:Q").axis(format="%").title("Percent of all Britneys"),
    color = alt.condition( 
        alt.datum.percent_of_total == highest_ttl, # if the percent of total is the highest
        alt.value('red'),
        alt.value('lightGray')
    )
)

chart
```


```{python}
#| label: Q2 table
#| code-summary: table example
#| tbl-cap: "Not much of a table"
#| tbl-cap-location: top
# Include and execute your code here

brit_unpopular = brit_popular.nsmallest(10, 'Total').set_index(['year'])

display(brit_unpopular)

```


## QUESTION | TASK 3

Mary, Martha, Peter, and Paul are all Christian names. From 1920 - 2000, compare the name usage of each of the four names. What trends do you notice?

The names seem to start spiking in the late 1910s to mid 1920s. The numbers start to fall off there. The spike is likely due to immigration and health care improvements. The small dip from mid 1920s till the late 1940s is probably due to the great depression and World War Two. The spike are the baby boomers. The populartity seems to start to fall with the next generations with a negitve slope till today.

```{python}
#| label: Q3
#| code-summary: Read and format data
# Include and execute your code here

christian_names = dat[['name', 'year', 'Total']].query(
    'name == "Mary" or name == "Martha" or name == "Peter" or name == "Paul"'
    )

christian_names = christian_names.query('year >= 1900 and year <= 2000')

chart = alt.Chart(christian_names).mark_line().encode(
        x = 'year:N',
        y = 'Total',
        color = 'name',
     )

chart

```

## QUESTION | TASK 4

Think of a unique name from a famous movie. Plot the usage of that name and see how changes line up with the movie release. Does it look like the movie had an effect on usage?

I picked the names of Luke and Leia from the Star Wars franchise. It looks like each movie release has a positive spike with the name. I found it interesting that Luke is a christian name and given the pervious question and the negitive trend with biblical names, Star Wars might have kept Luke relevant. Not that it is the sole reason for it's popualarity as we can see with the name Leia. Rather Star Wars helped the already popular name stay relevant.

```{python}
# Filter the data to only Luke and Leia names
star_wars_df = dat[['name', 'year', 'Total']].query( 
    'name == "Luke" or name =="Leia"'
)

# Create a DataFrame with the Star Wars release years  
star_wars_releases = pd.DataFrame({'x': [1977, 1980, 1983, 1999, 2002, 2005, 2015]})

# Create a line chart for Luke and Leia name usage over time
luke_liea = alt.Chart(star_wars_df).mark_line().encode(
        x = 'year:N', 
        y = 'Total',
        color='name', # Color by name
    )

# Create vertical rule lines at the release years
line = alt.Chart(star_wars_releases).mark_rule().encode(x = 'x:N') 

# Overlay the rule lines on top of the usage chart
luke_liea + line
```



## APPENDIX A (All Python Code)

```python
#paste other your code from your python file (.py) here
#the code snippets above should be just enough code to display the chart or table needed for the question or task
#the appendix should have all the code, and it should be well `commented`

#| label: libraries
#| include: false
import pandas as pd
import altair as alt
import numpy as np

from IPython.display import Markdown
from IPython.display import display
from tabulate import tabulate

dat = pd.read_csv("https://github.com/byuidatascience/data4names/raw/master/data-raw/names_year/names_year.csv")


# get the data for my name
spencer_over_time = dat[["name", "year", "Total"]].query("name == 'Spencer'")

# Q1 chart
chart = alt.Chart(
        spencer_over_time, 
        title=alt.Title("Spencers Over Time")
    )\
    .mark_line()\
    .encode(
        # x = "year:T",
        # y = "Total:Q",
        alt.X("year").axis(format="T").title("Year"),
        alt.Y("Total").axis(format="N").title("Total Spencers"),
        )\
    .properties(
        width=800,
        height=400
    )

# add a line at 1998, my birth year
line = alt.Chart(pd.DataFrame({"x": [1998], "Birth Year": ["Birth Year"]})).mark_rule().encode(
    alt.X("x").axis(format="T"),
    )

chart + line

# Q1 table

spencer_table = spencer_over_time.head(1000)\
    .groupby('year')\
    .sum()\
    .tail(10)\
    .filter(["year", "Total"])

display(spencer_table)

'''
QUESTION 2
'''

# Q2 data
dat = pd.read_csv('https://raw.githubusercontent.com/byuidatascience/data4names/master/data-raw/names_year/names_year.csv')

brit_popular = dat[['name', 'year', 'Total']].query('name == "Brittany"')

# Q2 chart

# calculate the highest percent of total
highest_ttl = brit_popular["Total"].max() / brit_popular["Total"].sum()


chart = alt.Chart(
        brit_popular,
        title = alt.Title("Percent of Total Britneys by Year")
    )\
    .transform_joinaggregate(
        total_time="sum(Total)"
    )\
    .transform_calculate(
        # calculate the percent of total
        percent_of_total="datum.Total / datum.total_time" 
    )\
    .mark_bar()\
    .encode(
    alt.X("year").axis(format="T").title("Year"),
    y = alt.Y("percent_of_total:Q").axis(format="%").title("Percent of all Britneys"),
    color = alt.condition( 
        alt.datum.percent_of_total == highest_ttl, # if the percent of total is the highest
        alt.value('red'),
        alt.value('lightGray')
    )
)

chart

# Q2 table

brit_unpopular = brit_popular.nsmallest(10, 'Total').set_index(['year'])

display(brit_unpopular)

'''
QUESTION 3
'''


christian_names = dat[['name', 'year', 'Total']].query(
    'name == "Mary" or name == "Martha" or name == "Peter" or name == "Paul"'
    )

christian_names = christian_names.query('year >= 1900 and year <= 2000')

chart = alt.Chart(christian_names).mark_line().encode(
        x = 'year:N',
        y = 'Total',
        color = 'name',
     )

chart

'''
QUESTION 4
'''

# Filter the data to only Luke and Leia names
star_wars_df = dat[['name', 'year', 'Total']].query( 
    'name == "Luke" or name =="Leia"'
)

# Create a DataFrame with the Star Wars release years  
star_wars_releases = pd.DataFrame({'x': [1977, 1980, 1983, 1999, 2002, 2005, 2015]})

# Create a line chart for Luke and Leia name usage over time
luke_liea = alt.Chart(star_wars_df).mark_line().encode(
        x = 'year:N', 
        y = 'Total',
        color='name', # Color by name
    )

# Create vertical rule lines at the release years
line = alt.Chart(star_wars_releases).mark_rule().encode(x = 'x:N') 

# Overlay the rule lines on top of the usage chart
luke_liea + line

```
